[package]
name = "dorion"
version = "6.0.1"
description = "Tiny alternative Discord client with a smaller footprint, themes and plugins, multi-profile, and more!"
authors = ["SpikeHD"]
license = ""
repository = ""
edition = "2021"
rust-version = "1.80"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[profile.release]
strip = "debuginfo"
lto = true

# Temp while I wait for official release
[patch.crates-io]
tauri = { git = "https://github.com/tauri-apps/tauri", rev = "a247170" }

[build-dependencies]
tauri-build = { version = "2.0.0-beta", features = [] }

[dependencies]
base64 = "0.22.1"
dirs = "5.0.1"
include-flate = "0.3"
serde_json = "1"
serde = { version = "1", features = ["derive"] }

tauri = { version = "2.0.0-rc", features = ["macos-private-api", "devtools", "tray-icon", "image-png"] }
tauri-plugin-shell = "2.0.0-rc"
tauri-plugin-single-instance = "2.0.0-rc"
tauri-plugin-process = "2.0.0-rc"
tauri-plugin-autostart = "2.0.0-rc"
tauri-plugin-notification = { version = "2.0.0-rc", features = ["win7-notifications", "windows7-compat"] }
tauri-plugin-http = "2.0.0-rc"
# window blur
window-vibrancy = { version = "0.5.0", optional = true }

reqwest = { version = "0.12.5", features = ["blocking"] }
phf = "0.11.2"
sysinfo = "0.30"
chrono = { version = "0.4", default-features = false, features = ["clock"] }
device_query = "2.1.0"
regex = "1.10"

# rpc server
rsrpc = { git = "https://www.github.com/SpikeHD/rsRPC", tag = "v0.16.1", optional = true }
window_titles = { git = "https://github.com/SpikeHD/window_titles", branch = "master" }

[target."cfg(any(target_os = \"linux\", target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\"))".dependencies]
webkit2gtk = "2.0"
wgpu = { version = "22", default-features = false }

[target.'cfg(target_os = "macos")'.dependencies]
objc2 = "0.5.2"
objc2-foundation = { version = "0.2.2", features = [
  "NSDate",
  "NSUserDefaults",
  "NSAutoreleasePool",
  "NSThread",
] }
objc2-app-kit = { version = "0.2.2", features = [
  "NSApplication",
  "NSColor",
  "NSResponder",
  "NSView",
  "NSWindow",
  "NSDockTile",
] }
objc2-web-kit = { version = "0.2.2", features = [
  "objc2-app-kit",
  "WKWebView",
  "WKUserContentController",
  "WKWebViewConfiguration",
  "WKWebsiteDataStore",
  "block2",
] }
block2 = "0.5.1"
embed_plist = "1.2.2"

[target."cfg(not(any(target_os = \"android\", target_os = \"ios\")))".dependencies]
tauri-plugin-window-state = "2.0.0-rc"

[target.'cfg(windows)'.dependencies]
webview2-com = "0.33.0"
windows-core = "0.58.0"
windows-implement = "0.58.0"

[target.'cfg(windows)'.dependencies.windows]
version = "0.58.0"
features = [
    "Data_Xml_Dom",
    "Win32_Foundation",
    "Win32_Security",
    "Win32_System_Threading",
    "Win32_UI_Shell",
    "Win32_UI_WindowsAndMessaging",
    "Win32_System_Com",
    "Win32_Graphics",
    "Win32_Graphics_Dwm",
]

[target.armv7-unknown-linux-gnueabihf]
linker = "arm-linux-gnueabihf-gcc"

[target.aarch64-unknown-linux-gnu]
linker = "aarch64-linux-gnu-gcc"

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = ["rpc", "blur"]
rpc = ["rsrpc"]
blur = ["window-vibrancy"]

[target.x86_64-unknown-linux-gnu]
rustflags = [
    "-C", "link-arg=-fuse-ld=lld",
]

# Also use lld on macos
[target.'cfg(target_os = "macos")']
rustflags = [
    "-C", "link-arg=-fuse-ld=lld",
]
